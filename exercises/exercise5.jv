pipeline StopsDataPipeline {

    StopsDataExtractor 
        -> ZipArchiveInterpreter 
        -> StopsFilePicker
        -> StopsTextFileInterpreter
        -> StopsCSVInterpreter
        -> StopsTableInterpreter
        -> StopsLoader;

    // ----- Define Values and Constraints -----
    valuetype geoCoordinates oftype decimal {
        constraints: [CoordinatesRange];
        }

    constraint CoordinatesRange oftype RangeConstraint {
        lowerBound: -90;
        lowerBoundInclusive: true;
        upperBound: 90;
        upperBoundInclusive: true;
        }

    valuetype zone1925 oftype integer{
        constraints: [value1925];
    }

    constraint value1925 on integer:
        value == 1925;

    // ----- Extractor Block -----
    block StopsDataExtractor oftype HttpExtractor {
        url: 'https://gtfs.rhoenenergie-bus.de/GTFS.zip';
        retries: 2;
    }

    // unzip
    block ZipArchiveInterpreter oftype ArchiveInterpreter {
    archiveType: "zip";
    }

    // select the file
    block StopsFilePicker oftype FilePicker {
    path: "./stops.txt";
    }

    block StopsTextFileInterpreter oftype TextFileInterpreter { 
        encoding: "utf8";
    }

    block StopsCSVInterpreter oftype CSVInterpreter{
        delimiter: ',';
        enclosing: '"'; 
		enclosingEscape: '"';
    }

    // ----- Table Interpreter -----
    block StopsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "stop_id" oftype integer,
            "stop_name" oftype text,
            "stop_lat" oftype geoCoordinates,
            "stop_lon" oftype geoCoordinates,
            "zone_id" oftype zone1925,
        ];
    }

    // Save
    block StopsLoader oftype SQLiteLoader {
        table: "stops";
        file: "gtfs.sqlite";
    }
}
